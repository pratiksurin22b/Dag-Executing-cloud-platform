services:
  # The Java Spring Boot Backend Service
  scheduler-service:
    build:
      context: ./scheduler-service
    ports:
      - "8080:8080"
    container_name: scheduler-service
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  # The React Frontend Service (served by Nginx)
  frontend:
    build:
      context: ./dag-ui-futuristic
    ports:
      - "80:80"
    container_name: frontend
    depends_on:
      - scheduler-service

  # The Redis State Store Service
  redis:
    image: "redis:7-alpine"
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # The RabbitMQ Message Broker Service
  rabbitmq:
    image: "rabbitmq:3.13-management-alpine"
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- NEW: The Generic Worker Service ---
  generic-worker:
    build:
      context: ./generic-worker
    container_name: generic-worker
    # The worker must wait for RabbitMQ to be ready before it starts.
    depends_on:
      rabbitmq:
        condition: service_healthy
    # This is the crucial part that gives this container control over Docker.
    # It maps the host's Docker socket into the container.
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

